{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReversed","visibleGoods","goods","IsReverse","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","cn","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAmCF,oBAAS,GAA5C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAA0BC,EAAOL,GAA+B,IAApBM,EAAmB,wDACvDC,EAAa,YAAOF,GAqB1B,OAnBIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKJ,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXN,GACFC,EAAcM,UAGTN,EAMcO,CAAiBnB,EAAiBK,EAAWE,GAOlE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAaL,IAC5BmB,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYlB,IAAcJ,IAJ9B,iCAUA,wBACEoB,KAAK,SACLC,QAAS,kBAAMhB,EAAaJ,IAC5BkB,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYlB,IAAcH,IAJ9B,4BAUA,wBACEmB,KAAK,SACLC,QAAS,kBAAMd,GAAc,SAAAgB,GAAI,OAAKA,MACtCJ,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAahB,IAJjB,sBAWGF,GAAaE,IACd,wBACEe,QAzCV,WACEhB,EAAa,IACbE,GAAc,IAwCNa,KAAK,SACLD,UAAU,4BAHZ,sBAWJ,6BAEIX,EAAagB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrG3DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5affe910.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField, IsReverse = false) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (IsReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, isReverse);\n\n  function reset() {\n    setSortField('');\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(prev => !prev)}\n          className={cn('button', 'is-warning', {\n            'is-light': !isReverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortField || isReverse) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}